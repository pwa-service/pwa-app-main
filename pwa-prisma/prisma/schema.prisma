datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  admin
  buyer
}

enum Status {
  active
  inactive
}

enum EventType {
  ViewContent
  PageView
  Lead
  CompleteRegistration
  Purchase
  Subscribe
}

enum LogStatus {
  success
  error
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  role      Role     @default(buyer)
  email     String?
  createdAt DateTime @default(now()) @map("created_at")
  status    Status   @default(active)

  pixelTokens PixelToken[]

  @@map("users")
}

model PixelToken {
  id          String   @id @default(uuid())
  pixelId     String   @unique @map("pixel_id")
  accessToken String   @map("access_token")
  name        String?
  description String?
  userId      String   @map("user_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  status      Status   @default(active)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_pixelTokens_userId")
  @@map("pixel_tokens")
}

model EventLog {
  id           String    @id @default(uuid())
  userId       String    @map("user_id")
  pixelId      String    @map("pixel_id")
  eventType    EventType @map("event_type")
  eventId      String    @map("event_id")
  revenue      Decimal?  @db.Decimal(18, 8)
  country      String?
  clientIp     String?   @map("ip_address")
  responseData String?   @map("response_data")
  status       LogStatus
  createdAt    DateTime  @default(now()) @map("created_at")

  @@index([userId], map: "idx_eventLogs_userId")
  @@index([pixelId], map: "idx_eventLogs_pixelId")
  @@index([eventType], map: "idx_eventLogs_eventType")
  @@index([createdAt], map: "idx_eventLogs_createdAt")
  @@map("event_logs")
}

model PwaSession {
  id                String     @id @unique @default(uuid())
  userId            String     @map("user_id")
  pwaDomain         String     @map("pwa_domain")
  landingUrl        String?    @map("landing_url")
  queryStringRaw    String?    @map("query_string_raw")
  pixelId           String     @map("pixel_id")
  fbclid            String?    @map("fbclid")
  offerId           String?    @map("offer_id")
  utmSource         String?    @map("utm_source")
  sub1              String?    @map("sub1")
  finalUrl          String?    @map("final_url")
  firstOpenAt       DateTime?  @map("first_open_at")
  firstOpenEventId  String?    @map("first_open_event_id")
  firstOpenFbStatus LogStatus? @map("first_open_fb_status")
  createdAt         DateTime   @default(now()) @map("created_at")
  updatedAt         DateTime   @updatedAt @map("updated_at")

  @@map("pwa_sessions")
}
