version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pwa"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  auth-service:
    build:
      context: .
      dockerfile: pwa-auth-service/Dockerfile
    working_dir: /workspace/pwa-auth-service
    container_name: auth-service
    environment:
      - PORT=4000
      - AUTH_GRPC_URL=0.0.0.0:50051
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/pwa?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AUTH_ISSUER=https://auth.local/
      - AUTH_AUDIENCE=api
      - AUTH_ACCESS_TTL=900
      - AUTH_REFRESH_TTL=604800
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "4000:4000"
      - "50051:50051"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:4000/.well-known/jwks.json"]
      interval: 10s
      timeout: 3s
      retries: 8
      start_period: 10s

  event-handler:
    build:
      context: .
      dockerfile: pwa-event-handler/Dockerfile
    working_dir: /workspace/pwa-event-handler
    environment:
      - PORT=4300
      - EVENT_GRPC_URL=0.0.0.0:50053
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/pwa?schema=public
      - TRACKER_BASE_URL=https://tracker.example.com/landing
      - FB_MOCK=true
      - FB_GRAPH_VERSION=v21.0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "50053:50053"
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=:50053"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s

  logger-service:
    build:
      context: .
      dockerfile: pwa-logger/Dockerfile
    working_dir: /workspace/pwa-logger
    container_name: logger-service
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/pwa?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_NAME=PWA_EVENTS_QUEUE
      - WORKER_CONCURRENCY=5
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  api-gateway:
    build:
      context: .
      dockerfile: ./pwa-api-gateway/Dockerfile
    environment:
      - PORT=3000
      - AUTH_GRPC_URL=auth-service:50051
      - EVENT_HANDLER_GRPC_URL=event-handler:50053
      - AUTH_JWKS_URL=http://auth-service:4000/.well-known/jwks.json
      - AUTH_ISSUER=https://auth.local/
      - AUTH_AUDIENCE=api
    depends_on:
      auth-service:
        condition: service_healthy
      event-handler:
        condition: service_healthy
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: redis
    command: [ "redis-server", "--appendonly", "yes" ]
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  postgres_data:
